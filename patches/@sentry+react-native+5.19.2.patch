diff --git a/node_modules/@sentry/react-native/.DS_Store b/node_modules/@sentry/react-native/.DS_Store
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/@sentry/react-native/android/.npmignore b/node_modules/@sentry/react-native/android/.gitignore
similarity index 100%
rename from node_modules/@sentry/react-native/android/.npmignore
rename to node_modules/@sentry/react-native/android/.gitignore
diff --git a/node_modules/@sentry/react-native/ios/RNSentry.mm b/node_modules/@sentry/react-native/ios/RNSentry.mm
index 90ebeb9..3b94f71 100644
--- a/node_modules/@sentry/react-native/ios/RNSentry.mm
+++ b/node_modules/@sentry/react-native/ios/RNSentry.mm
@@ -325,25 +325,26 @@ RCT_EXPORT_METHOD(fetchNativeDeviceContexts:(RCTPromiseResolveBlock)resolve
 RCT_EXPORT_METHOD(fetchNativeAppStart:(RCTPromiseResolveBlock)resolve
                   rejecter:(RCTPromiseRejectBlock)reject)
 {
-
-    SentryAppStartMeasurement *appStartMeasurement = PrivateSentrySDKOnly.appStartMeasurement;
-
-    if (appStartMeasurement == nil) {
-        resolve(nil);
-    } else {
-        BOOL isColdStart = appStartMeasurement.type == SentryAppStartTypeCold;
-
-        resolve(@{
-            @"isColdStart": [NSNumber numberWithBool:isColdStart],
-            @"appStartTime": [NSNumber numberWithDouble:(appStartMeasurement.appStartTimestamp.timeIntervalSince1970 * 1000)],
-            @"didFetchAppStart": [NSNumber numberWithBool:didFetchAppStart],
-                });
-
-    }
-
-    // This is always set to true, as we would only allow an app start fetch to only happen once
-    // in the case of a JS bundle reload, we do not want it to be instrumented again.
-    didFetchAppStart = true;
+    resolve(nil);
+//
+//    SentryAppStartMeasurement *appStartMeasurement = PrivateSentrySDKOnly.appStartMeasurement;
+//
+//    if (appStartMeasurement == nil) {
+//        resolve(nil);
+//    } else {
+//        BOOL isColdStart = appStartMeasurement.type == SentryAppStartTypeCold;
+//
+//        resolve(@{
+//            @"isColdStart": [NSNumber numberWithBool:isColdStart],
+//            @"appStartTime": [NSNumber numberWithDouble:(appStartMeasurement.appStartTimestamp.timeIntervalSince1970 * 1000)],
+//            @"didFetchAppStart": [NSNumber numberWithBool:didFetchAppStart],
+//                });
+//
+//    }
+//
+//    // This is always set to true, as we would only allow an app start fetch to only happen once
+//    // in the case of a JS bundle reload, we do not want it to be instrumented again.
+//    didFetchAppStart = true;
 }
 
 RCT_EXPORT_METHOD(fetchNativeFrames:(RCTPromiseResolveBlock)resolve
